<pre>
  MIP: 2
  Title: MIP Status and Comments
  Author: Luke Dashjr <luke+mip@dashjr.org>
  Status: Deferred
  Type: Process
  Created: 2016-02-03
</pre>

==Abstract==

This MIP describes objective criteria that can be used to determine when a MIP Status should be changed, to ensure it is a reliable metric documenting actual usage of the proposal. It also adds a way for final comment on completed MIPs, by adding to them a reference to a wiki page and summary of the tone thereof. Finally, it extends the list of allowable MIP licenses to include many more popular options.

==Copyright==

This MIP is dual-licensed under the Open Publication License and BSD 2-clause license.

==MIP status field==

===Specification===

Champions of a MIP may decide on their own to change the status between Draft, Deferred, or Withdrawn.

A MIP may only change status from Draft (or Rejected) to Accepted, when the author deems it is complete, has a working implementation (where applicable), and has community plans to progress it to the Final status.

MIPs should be changed from Draft or Accepted status, to Rejected status, upon request by any person, if they have not made progress in three years. Such a MIP may be changed to Draft status if the champion provides revisions that meaningfully address public criticism of the proposal, or to Accepted status if it meets the criteria required as described in the previous paragraph.

An Accepted MIP may progress to Final only when specific criteria reflecting real-world adoption has occurred. This is different for each MIP depending on the nature of its proposed changes, which will be expanded on below. Evaluation of this status change should be objectively verifiable, and/or be discussed on the development mailing list.

When a Final MIP is no longer relevant, its status may be changed to Replaced or Obsolete (which is equivalent to Replaced). This change must also be objectively verifiable and/or discussed.

A process MIP may change status from Draft to Active when it achieves rough consensus on the mailing list. Such a proposal is said to have rough consensus if it has been open to discussion on the development mailing list for at least one month, and no person maintains any unaddressed substantiated objections to it. Addressed or obstructive objections may be ignored/overruled by general agreement that they have been sufficiently addressed, but clear reasoning must be given in such circumstances.

====Progression to Final status====

See [[mip-0123.mediawiki|MIP 123]] for definitions of the various MIP layers. Activation of this MIP implies activation of MIP 123.

A soft-fork MIP strictly requires a clear miner majority expressed by blockchain voting (eg, using MIP 9). In addition, if the economy seems willing to make a "no confidence" hard-fork (such as a change in proof-of-work algorithm), the soft-fork does not become Final for as long as such a hard-fork might have majority support, or at most three months. Soft-fork MIPs may also set additional requirements for their adoption. Because of the possibility of changes to miner dynamics, especially in light of delegated voting (mining pools), it is highly recommended that a supermajority vote around 95% be required by the MIP itself, unless rationale is given for a lower threshold.

A hard-fork MIP requires adoption from the entire Machinecoin economy, particularly including those selling desirable goods and services in exchange for machinecoin payments, as well as Machinecoin holders who wish to spend or would spend their machinecoins (including selling for other currencies) differently in the event of such a hard-fork. Adoption must be expressed by de facto usage of the hard-fork in practice (ie, not merely expressing public support, although that is a good step to establish agreement before adoption of the MIP). This economic adoption cannot be established merely by a super-majority, except by literally forcing the minority to accept the hard-fork (whether this is viable or not is outside the scope of this document).

Peer services MIPs should be observed to be adopted by at least 1% of public listening nodes for one month.

API/RPC and application layer MIPs must be implemented by at least two independent and compatible software applications.

Software authors are encouraged to publish summaries of what MIPs their software supports to aid in verification of status changes. Good examples of this at the time of writing this MIP, can be observed in [https://github.com/machinecoin/machinecoin/blob/master/doc/mips.md Machinecoin Core's doc/mips.md file] as well as [https://github.com/schildbach/machinecoin-wallet/blob/master/wallet/README.specs Machinecoin Wallet for Android's wallet/README.specs file].

These criteria are considered objective ways to observe the de facto adoption of the MIP, and are not to be used as reasons to oppose or reject a MIP. Should a MIP become actually and unambiguously adopted despite not meeting the criteria outlined here, it should still be updated to Final status.

===Rationale===

Why is this necessary at all?

* MIP 1 defines an ambiguous criteria for the Status field of MIPs, which is often a source of confusion. As a result, many MIPs with significant real-world use have been left as Draft or Accepted status longer than appropriate. By giving objective criteria to judge the progression of MIPs, this proposal aims to help keep the Status accurate and up-to-date.

How is the entire Machinecoin economy defined by people selling goods/services and holders?

* For Machinecoin to function as a currency, it must be accepted as payment. Machinecoins have no value if you cannot acquire anything in exchange for them. If everyone accepting such payments requires a particular set of consensus rules, "machinecoins" are de facto defined by that set of rules - this is already the case today. If those consensus rules are expected to broaden (as with a hard-fork), those merchants need to accept payments made under the new set of rules, or they will reject "machinecoins" as invalid. Holders are relevant to the degree in that they choose the merchants they wish to spend their machinecoins with, and could also as a whole decide to sell under one set of consensus rules or the other, thus flooding the market with machinecoins and crashing the price.

Why aren't <x> included in the economy?

* Some entities may, to some degree, also be involved in offering goods and/or services in exchange for machinecoins, thus in that capacity (but not their capacity as <x>) be involved in the economy.
* Miners are not included in the economy, because they merely *rely on* others to sell/spend their otherwise-worthless mined produce. Therefore, they must accept everyone else's direction in deciding the consensus rules.
* Exchanges are not included in the economy, because they merely provide services of connecting the merchants and users who wish to trade. Even if all exchanges were to defect from Machinecoin, those merchants and users can always trade directly and/or establish their own exchanges.
* Developers are not included in the economy, since they merely write code, and it is up to others to decide to use that code or not.

But they're doing something important and have invested a lot in Machinecoin! Shouldn't they be included in such an important decision?

* This MIP does not aim to address what "should" be the basis of decisions. Such a statement, no matter how perfect in its justification, would be futile without some way to force others to use it. The MIP process does not aim to be a kind of forceful "governance" of Machinecoin, merely to provide a collaborative repository for proposing and providing information on standards, which people may voluntarily adopt or not. It can only hope to achieve accuracy in regard to the "Status" field by striving to reflect the reality of *how things actually are*, rather than *how they should be*.

What if a single merchant wishes to block a hard-fork?

* This MIP addresses only the progression of the MIP Status field, not the deployment of the hard-fork (or any other change) itself.
* Regardless, one shop cannot operate in a vacuum: if they are indeed alone, they will soon find themselves no longer selling in exchange for machinecoin payments, as nobody else would exist willing to use the previous blockchain to pay them. If they are no longer selling, they cease to meet the criteria herein which enables their veto.

How about a small number of merchants (maybe only two) who sell products to each other?

* In this scenario, it would seem the previous Machinecoin is alive any working, and that the hard-fork has failed. How to resolve such a split is outside the scope of this MIP.

How can economic agreement veto a soft-fork?

* The group of miners is determined by the consensus rules for the dynamic-membership multi-party signature (for Machinecoin, the proof-of-work algorithm), which can be modified with a hard-fork. Thus, if the same conditions required to modify this group are met in opposition to a soft-fork, the miner majority supporting the soft-fork is effectively void because the economy can decide to replace them with another group of would-be miners who do not support the soft-fork.

What happens if the economy decides to hard-fork away from a controversial soft-fork, more than three months later?

* The controversial soft-fork, in this circumstance, changes from Final to Replaced status to reflect the nature of the hard-fork replacing the previous (final) soft-fork.

What is the ideal percentage of listening nodes needed to adopt peer services proposals?

* This is unknown, and set rather arbitrarily at this time. For a random selection of peers to have at least one other peer implementing the extension, 13% or more would be necessary, but nodes could continue to scan the network for such peers with perhaps some reasonable success. Furthermore, service bits exist to help identification upfront.

Why is it necessary for at least two software projects to release an implementation of API/RPC and application layer MIPs, before they become Final?

* If there is only one implementation of a specification, there is no other program for which a standard interface is used with or needed.
* Even if there are only two projects rather than more, some standard coordination between them exists.

What if a MIP is proposed that only makes sense for a single specific project?

* The MIP process exists for standardisation between independent projects. If something only affects one project, it should be done through that project's own internal processes, and never be proposed as a MIP in the first place.

==MIP comments==

===Specification===

Each MIP should, in its preamble, link to a Machinecoin Wiki page with a summary tone of the comments on that page.
Reviewers of the MIP who consider themselves qualified, should post their own comments on this wiki page in [https://www.mediawiki.org/wiki/Help:Talk_pages#Editing_conventions_on_talk_pages standard "Talk page" format].
The comments page should generally only be used to post final comments for a completed MIP.
If a MIP is not yet completed, reviewers should instead post on the applicable development mailing list thread to allow the MIP author(s) to address any concerns or problems pointed out by the review.

Some MIPs receive exposure outside the development community prior to completion, and other MIPs might not be completed at all. To avoid a situation where critical MIP reviews may go unnoticed during this period, reviewers may, at their option, still post their review on the comments page, provided they first post it to the mailing list and plan to later remove or revise it as applicable based on the completed version. Such revisions should be made by editing the previous review and updating the timestamp. Reviews made prior to the complete version may be removed if they are no longer applicable and have not been updated in a timely manner (eg, within one month).

Pages must be named after the full MIP number (eg, "MIP 0001") and placed in the "MIP Comments" namespace. For example, the link for MIP 1 will be https://en.machinecoin.it/wiki/MIP_Comments:MIP_0001 .

In order to avoid possible abuse of Machinecoin Wiki moderation, MIPs may choose to list a second forum for MIP comments, in addition to the Machinecoin Wiki. In this case, the second forum's URI should be listed below the Machinecoin Wiki's URI.

Summary tones may be chosen from the following, but this MIP does not intend to cover all possible nuances:

* No comments yet.
* Unanimously Recommended for implementation
* Unanimously Discourage for implementation
* Mostly Recommended for implementation, with some Discouragement
* Mostly Discouraged for implementation, with some Recommendation

For example, the preamble to MIP 1 might be updated to include the line:

    Comments-Summary: No comments yet.
    Comments-URI: https://en.machinecoin.it/wiki/MIP_Comments:MIP_0001
                  https://some-other-wiki.org/MIP_1_Comments

These fields must follow the "Discussions-To" header defined in MIP 1 (if that header is not present, it should follow the position where it would be present; generally this is immediately above the Status header).

To avoid doubt: comments and status are unrelated metrics to judge a MIP, and neither should be directly influencing the other.

===Rationale===

What is the purpose of MIP comments?

* Various MIPs have been adopted (the criteria required for "Final" Status) despite being considered generally inadvisable. Some presently regard MIPs as a "good idea" simply by virtue of them being assigned a MIP number. Due to the low barrier of entry for submission of new MIPs, it seems advisable for a way for reviewers to express their opinions on them in a way that is consumable to the public without needing to review the entire development discussion.

Will MIP comments be censored or limited to particular participants/"experts"?

* The Machinecoin Wiki moderators have control over that venue and may make reasonable moderation attempts. Admitted non-experts should refrain from commenting outside of their area of knowledge. However, comments should not be censored, and participation should be open to the public.
* If the Machinecoin Wiki were to abuse its position, the venue for comments can always be changed.

==MIP licensing==

===Specification===

New MIPs may be accepted with the following licenses. Each new MIP must identify at least one acceptable license in its preamble. The License header in the preamble must be placed after the Created header. Each license must be referenced by their respecitve abbreviation given below.

For example, a preamble might include the following License header:

    License: BSD-2-Clause
             GNU-All-Permissive

In this case, the MIP text is fully licensed under both the OSI-approved BSD 2-clause license as well as the GNU All-Permissive License, and anyone may modify and redistribute the text provided they comply with the terms of *either* license. In other words, the license list is an "OR choice", not an "AND also" requirement.

It is also possible to license source code differently from the MIP text. A optional License-Code header is placed after the License header. Again, each license must be referenced by their respective abbreviation given below.

For example, a preamble specifying the optional License-Code header might look like:

    License: BSD-2-Clause
             GNU-All-Permissive
    License-Code: GPL-2.0+

In this case, the code in the MIP is not available under the BSD or All-Permissive licenses, but only under the terms of the GNU General Public License (GPL), version 2 or newer.
If the code were to be available under *only* version 2 exactly, the "+" symbol should be removed from the license abbreviation.
For a later version (eg, GPL 3.0), you would increase the version number (and retain or remove the "+" depending on intent).

    License-Code: GPL-2.0   # This refers to GPL v2.0 *only*, no later license versions are acceptable.
    License-Code: GPL-2.0+  # This refers to GPL v2.0 *or later*.
    License-Code: GPL-3.0   # This refers to GPL v3.0 *only*, no later license versions are acceptable.
    License-Code: GPL-3.0+  # This refers to GPL v3.0 *or later*.

In the event that the text or code is not available under common license terms, the list should instead be replaced with the single term "Complex", and full details provided in the Copyright section of the MIP.

====Recommended licenses====

* BSD-2-Clause: [https://opensource.org/licenses/BSD-2-Clause OSI-approved BSD 2-clause license]
* BSD-3-Clause: [https://opensource.org/licenses/BSD-3-Clause OSI-approved BSD 3-clause license]
* CC0-1.0: [https://creativecommons.org/publicdomain/zero/1.0/ Creative Commons CC0 1.0 Universal]
* GNU-All-Permissive: [http://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-Files.html GNU All-Permissive License]

In addition, it is recommended that literal code included in the MIP be dual-licensed under the same license terms as the project it modifies. For example, literal code intended for Machinecoin Core would ideally be dual-licensed under the MIT license terms as well as one of the above with the rest of the MIP text.

====Not recommended, but acceptable licenses====

* Apache-2.0: [http://www.apache.org/licenses/LICENSE-2.0 Apache License, version 2.0]
* BSL-1.0: [http://www.boost.org/LICENSE_1_0.txt Boost Software License, version 1.0]
* CC-BY-4.0: [https://creativecommons.org/licenses/by/4.0/ Creative Commons Attribution 4.0 International]
* CC-BY-SA-4.0: [https://creativecommons.org/licenses/by-sa/4.0/ Creative Commons Attribution-ShareAlike 4.0 International]
* MIT: [https://opensource.org/licenses/MIT Expat/MIT/X11 license]
* AGPL-3.0+: [http://www.gnu.org/licenses/agpl-3.0.en.html GNU Affero General Public License (AGPL), version 3 or newer]
* FDL-1.3: [http://www.gnu.org/licenses/fdl-1.3.en.html GNU Free Documentation License, version 1.3]
* GPL-2.0+: [http://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html GNU General Public License (GPL), version 2 or newer]
* LGPL-2.1+: [http://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html GNU Lesser General Public License (LGPL), version 2.1 or newer]
* OPL: [http://opencontent.org/openpub/ Open Publication License, version 1.0]

Additionally, PD is used to express that the work is placed in the public domain.
This may not be used for new MIPs, and is only defined for use by MIPs predating acceptance of this MIP.

===Rationale===

MIP 1 allowed the Open Publication License or releasing into the public domain; was this insufficient?

* The OPL is generally regarded as obsolete, and not a license suitable for new publications.
* Many are unfamiliar with the OPL terms, and may just prefer to use the public domain rather than license under uncertain terms.
* Public domain is not universally recognised as a legitimate action, thus it is inadvisable.

Why are there software licenses included?

* Some MIPs, especially consensus layer, may include literal code in the MIP itself which may not be available under the exact license terms of the MIP.
* Despite this, not all software licenses would be acceptable for content included in MIPs.

Why is Public Domain no longer acceptable for new MIPs?

* In some jurisdictions, public domain is not recognised as a legitimate legal action, leaving the MIP simply copyrighted with no redistribution or modification allowed at all.

==See Also==

* [[mip-0001.mediawiki|MIP 1: MIP Purpose and Guidelines]]
* [[mip-0123.mediawiki|MIP 123: MIP Classification]]
* [https://tools.ietf.org/html/rfc7282 RFC 7282: On Consensus and Humming in the IETF]
